plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.0'
    id 'io.ktor.plugin' version '2.3.11'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.ktor:ktor-server-core-jvm:2.3.11"
    implementation "io.ktor:ktor-server-netty-jvm:2.3.11"
    implementation 'org.json:json:20231013'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.2"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

kotlin {
    jvmToolchain(21)
}

application {
    mainClass = 'poker.player.kotlin.ApplicationKt'
}

task stage {
    dependsOn assemble
}

test {
    useJUnitPlatform()
    // Run tests in parallel where safe (class-level concurrency)
    systemProperty "junit.jupiter.execution.parallel.enabled", "true"
    systemProperty "junit.jupiter.execution.parallel.mode.default", "concurrent"
    systemProperty "junit.jupiter.execution.parallel.mode.classes.default", "concurrent"

    // Fork multiple processes based on available CPUs
    maxParallelForks = Math.max(1, Runtime.runtime.availableProcessors() - 1)
}
